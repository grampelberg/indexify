---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app.kubernetes.io/component: api
spec:
  ports:
    - port: 8900
  selector:
    app.kubernetes.io/component: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app.kubernetes.io/component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/component: api

    spec:
      initContainers:
        - name: concat
          image: alpine:3
          command: ['/bin/sh', '-c']
          args:
            - |-
              find /fragments -type f | xargs -I{} sh -c "cat {}; echo ''" > /config/config.yaml

          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /fragments
              name: fragments

      containers:
        - name: indexify
          image: tensorlake/indexify:latest

          command: ['indexify']
          args:
            - server
            - --config-path
            - ./config/config.yaml

          env:
            # This is the env var required to work with something other than
            # AWS' hosted S3. They're injected by components/minio to show how a
            # all-local solution would work.
            # - name: AWS_ENDPOINT
            #   value: http://blob-store:9000
            # - name: AWS_ALLOW_HTTP
            #   value: "true"

            # - name: AWS_ACCESS_KEY_ID
            #   valueFrom:
            #     secretKeyRef:
            #       name: blob-store
            #       key: AWS_ACCESS_KEY_ID
            # - name: AWS_SECRET_ACCESS_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: blob-store
            #       key: AWS_SECRET_ACCESS_KEY

          volumeMounts:
            - mountPath: /indexify/config
              name: config
              readOnly: true
            - mountPath: /data
              name: data

      volumes:
        - name: fragments
          configMap:
            name: indexify
        - name: config
          emptyDir: {}
        - name: data
          emptyDir: {}
