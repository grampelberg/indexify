{{- with .Values.coordinator }}
{{- if .enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coordinator
  labels:
    {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coordinator
  labels:
    {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 4 }}
rules:
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
  - apiGroups: [""]
    resources:
    - services
    verbs:
    - get
  - apiGroups: [""]
    resources:
    - pods
    verbs:
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coordinator
  labels:
    {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: coordinator
roleRef:
  kind: Role
  name: coordinator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: coordinator
spec:
  ports:
    - port: 8950
      name: coordinator
    - port: 8970
      name: raft
  selector:
    {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: coordinator
  labels:
    {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 4 }}
spec:
  replicas: {{ include "quorum" (default 1 .replicas) }}

  # Let raft figure things out, otherwise scaling by 1 causes an inability to update anything - as nothing is ready
  podManagementPolicy: Parallel

  selector:
    matchLabels:
    {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8960"
    spec:
      {{- if .nodeSelector }}
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      {{- end }}
      serviceAccountName: coordinator
      containers:
        - name: indexify
          image: {{ .image }}

          command: ["/bin/bash", "-ce", "-o", "pipefail"]

          # See the discovery command help for an explanation of how the seed node is chosen.
          args:
            - seed="$(indexify discovery coordinator)";
              indexify coordinator
                --config-path ./config/config.yaml
                $(if [ "$seed" == "$(hostname -i)" ]; then echo "--initialize"; fi)
                --node-id "$(hostname | rev | cut -d- -f1 | rev)"

          volumeMounts:
            - mountPath: /indexify/config
              name: config
              readOnly: true
            - mountPath: /data
              name: data

          livenessProbe:
            httpGet:
              path: /metrics
              port: 8960

          readinessProbe:
            httpGet:
              path: /state
              port: 8960

      volumes:
        - name: config
          configMap:
            name: indexify
        {{ if not .persistence }}
        - name: data
          emptyDir: {}
        {{- end }}

  {{ with .persistence}}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "labels" (dict "name" "coordinator" "component" "coordinator" "global" $) | nindent 8 }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .storageClass | default "standard" }}
      resources:
        requests:
          storage: 1Gi
  {{- end }}

{{- end }}
{{- end }}
